"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–æ–ª–µ–π –∏–∑ .env —Ñ–∞–π–ª–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import os
from dotenv import load_dotenv
import sys
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()


def sync_roles():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–π –∏–∑ .env —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ .env
    admin_ids_str = os.getenv("ADMIN_IDS", "")
    dispatcher_ids_str = os.getenv("DISPATCHER_IDS", "")
    
    admin_ids = [int(id_.strip()) for id_ in admin_ids_str.split(",") if id_.strip()]
    dispatcher_ids = [int(id_.strip()) for id_ in dispatcher_ids_str.split(",") if id_.strip()]
    
    print("\n" + "="*80)
    print("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –†–û–õ–ï–ô –ò–ó .ENV –§–ê–ô–õ–ê")
    print("="*80 + "\n")
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –≤ .env:")
    print(f"   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {admin_ids}")
    print(f"   –î–∏—Å–ø–µ—Ç—á–µ—Ä—ã: {dispatcher_ids}")
    print()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('bot_database.db')
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    
    updated_count = 0
    created_count = 0
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    print("üëë –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...")
    for admin_id in admin_ids:
        cursor.execute("SELECT id, telegram_id, role FROM users WHERE telegram_id = ?", (admin_id,))
        user = cursor.fetchone()
        
        if user:
            current_role = user['role']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–æ–ª—å ADMIN
            if 'ADMIN' not in current_role.split(','):
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å ADMIN, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
                roles = [r.strip() for r in current_role.split(',') if r.strip() and r.strip() != 'UNKNOWN']
                
                if 'ADMIN' not in roles:
                    roles.append('ADMIN')
                
                new_role = ','.join(sorted(set(roles)))
                
                cursor.execute("UPDATE users SET role = ? WHERE telegram_id = ?", (new_role, admin_id))
                print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {admin_id}: {current_role} ‚Üí {new_role}")
                updated_count += 1
            else:
                print(f"   ‚ÑπÔ∏è  {admin_id}: —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        else:
            print(f"   ‚ö†Ô∏è  {admin_id}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É)")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤
    print("\nüìû –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤...")
    for dispatcher_id in dispatcher_ids:
        cursor.execute("SELECT id, telegram_id, role FROM users WHERE telegram_id = ?", (dispatcher_id,))
        user = cursor.fetchone()
        
        if user:
            current_role = user['role']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–æ–ª—å DISPATCHER
            if 'DISPATCHER' not in current_role.split(','):
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å DISPATCHER, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
                roles = [r.strip() for r in current_role.split(',') if r.strip() and r.strip() != 'UNKNOWN']
                
                if 'DISPATCHER' not in roles:
                    roles.append('DISPATCHER')
                
                new_role = ','.join(sorted(set(roles)))
                
                cursor.execute("UPDATE users SET role = ? WHERE telegram_id = ?", (new_role, dispatcher_id))
                print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {dispatcher_id}: {current_role} ‚Üí {new_role}")
                updated_count += 1
            else:
                print(f"   ‚ÑπÔ∏è  {dispatcher_id}: —É–∂–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä")
        else:
            print(f"   ‚ö†Ô∏è  {dispatcher_id}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É)")
    
    conn.commit()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("-" * 80)
    
    all_ids = set(admin_ids + dispatcher_ids)
    cursor.execute(f"SELECT telegram_id, username, first_name, last_name, role FROM users WHERE telegram_id IN ({','.join(['?']*len(all_ids))})", tuple(all_ids))
    users = cursor.fetchall()
    
    if users:
        for user in users:
            name = f"{user['first_name'] or ''} {user['last_name'] or ''}".strip() or user['username'] or f"ID: {user['telegram_id']}"
            roles = user['role']
            
            role_names = {
                'ADMIN': 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'DISPATCHER': 'üìû –î–∏—Å–ø–µ—Ç—á–µ—Ä',
                'MASTER': 'üîß –ú–∞—Å—Ç–µ—Ä',
                'UNKNOWN': '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            }
            
            roles_display = ', '.join([role_names.get(r.strip(), r) for r in roles.split(',')])
            
            print(f"   {user['telegram_id']:>12} | {name:20} | {roles_display}")
    
    conn.close()
    
    print("\n" + "="*80)
    if updated_count > 0:
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {updated_count}")
    else:
        print("‚ÑπÔ∏è  –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤—Å–µ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã)")
    print("="*80 + "\n")
    
    return updated_count


if __name__ == "__main__":
    try:
        updated = sync_roles()
        
        if updated > 0:
            print("üí° –í–ê–ñ–ù–û: –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–æ—Ç—É.")
            print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start\n")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}\n")
        import traceback
        traceback.print_exc()

