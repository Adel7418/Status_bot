#!/bin/bash

# ========================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π Alembic
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./migrate.sh [–∫–æ–º–∞–Ω–¥–∞]
# ========================================

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

cd "$PROJECT_DIR"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é upgrade head)
COMMAND=${1:-"upgrade head"}

print_info "=========================================="
print_info "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Alembic"
print_info "=========================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if command -v docker &> /dev/null; then
    print_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Docker –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Redis –∑–∞–ø—É—â–µ–Ω
    if ! docker ps | grep -q telegram_bot_redis; then
        print_info "–ó–∞–ø—É—Å–∫ Redis..."
        docker compose -f docker/docker-compose.prod.yml up -d redis
        sleep 2
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Docker
    print_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: alembic $COMMAND"
    docker compose -f docker/docker-compose.prod.yml run --rm bot alembic $COMMAND
    
    print_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
else
    # –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    print_info "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Python..."
    
    if [ ! -d "venv" ]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
        print_info "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ: python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
        exit 1
    fi
    
    source venv/bin/activate
    print_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: alembic $COMMAND"
    alembic $COMMAND
    deactivate
    
    print_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
fi

echo ""
print_info "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é:"
print_info "  docker compose -f docker/docker-compose.prod.yml run --rm bot alembic current"
echo ""

