#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è SQLite-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –º–∏–≥—Ä–∞—Ü–∏–∏ 006, 008, 010 (–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç PostgreSQL-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ 007, 009)
"""

import sqlite3
import sys
from pathlib import Path
from datetime import datetime


def check_column_exists(cursor, table: str, column: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ"""
    cursor.execute(f"PRAGMA table_info({table});")
    columns = [col[1] for col in cursor.fetchall()]
    return column in columns


def check_table_exists(cursor, table: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã"""
    cursor.execute(
        "SELECT name FROM sqlite_master WHERE type='table' AND name=?;", (table,)
    )
    return cursor.fetchone() is not None


def check_index_exists(cursor, index: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞"""
    cursor.execute(
        "SELECT name FROM sqlite_master WHERE type='index' AND name=?;", (index,)
    )
    return cursor.fetchone() is not None


def get_current_version(cursor) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    try:
        cursor.execute("SELECT version_num FROM alembic_version;")
        result = cursor.fetchone()
        return result[0] if result else "none"
    except:
        return "none"


def apply_migration_008(cursor, conn):
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 008: Soft delete –∏ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("\nüìã –ú–∏–≥—Ä–∞—Ü–∏—è 008: Soft delete –∏ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")

    changes_made = False

    # –î–æ–±–∞–≤–ª—è–µ–º deleted_at –∫–æ–ª–æ–Ω–∫–∏
    tables_for_deleted_at = ['users', 'masters', 'orders', 'audit_log']
    for table in tables_for_deleted_at:
        if not check_column_exists(cursor, table, 'deleted_at'):
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ deleted_at –≤ {table}")
            cursor.execute(f"ALTER TABLE {table} ADD COLUMN deleted_at DATETIME NULL;")
            changes_made = True
        else:
            print(f"  ‚è≠Ô∏è  deleted_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ {table}")

    # –î–æ–±–∞–≤–ª—è–µ–º version –∫–æ–ª–æ–Ω–∫–∏
    version_tables = ['users', 'masters', 'orders']
    for table in version_tables:
        if not check_column_exists(cursor, table, 'version'):
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ version –≤ {table}")
            cursor.execute(
                f"ALTER TABLE {table} ADD COLUMN version INTEGER NOT NULL DEFAULT 1;"
            )
            changes_made = True
        else:
            print(f"  ‚è≠Ô∏è  version —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ {table}")

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è deleted_at
    indexes = [
        ('idx_users_deleted_at', 'users', 'deleted_at'),
        ('idx_masters_deleted_at', 'masters', 'deleted_at'),
        ('idx_orders_deleted_at', 'orders', 'deleted_at'),
        ('idx_audit_log_deleted_at', 'audit_log', 'deleted_at'),
    ]

    for idx_name, table, column in indexes:
        if not check_index_exists(cursor, idx_name):
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ {idx_name}")
            cursor.execute(
                f"CREATE INDEX {idx_name} ON {table} ({column});"
            )
            changes_made = True
        else:
            print(f"  ‚è≠Ô∏è  –ò–Ω–¥–µ–∫—Å {idx_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É entity_history –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not check_table_exists(cursor, 'entity_history'):
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã entity_history")
        cursor.execute("""
            CREATE TABLE entity_history (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                table_name VARCHAR(50) NOT NULL,
                record_id INTEGER NOT NULL,
                field_name VARCHAR(50) NOT NULL,
                old_value TEXT,
                new_value TEXT,
                changed_by INTEGER,
                changed_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (changed_by) REFERENCES users (telegram_id)
            )
        """)

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute(
            "CREATE INDEX idx_entity_history_table_record ON entity_history (table_name, record_id);"
        )
        cursor.execute(
            "CREATE INDEX idx_entity_history_changed_at ON entity_history (changed_at);"
        )
        cursor.execute(
            "CREATE INDEX idx_entity_history_changed_by ON entity_history (changed_by);"
        )
        print("  ‚úÖ –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è entity_history —Å–æ–∑–¥–∞–Ω—ã")
        changes_made = True
    else:
        print("  ‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ entity_history —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    if changes_made:
        conn.commit()
        print("  ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 008 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
    else:
        print("  ‚ÑπÔ∏è  –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ 008 —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")

    return changes_made


def apply_migration_010(cursor, conn):
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 010: –ê—Ä—Ö–∏–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤"""
    print("\nüìã –ú–∏–≥—Ä–∞—Ü–∏—è 010: –ê—Ä—Ö–∏–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤")

    if check_table_exists(cursor, 'master_reports_archive'):
        print("  ‚è≠Ô∏è  –¢–∞–±–ª–∏—Ü–∞ master_reports_archive —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return False

    print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã master_reports_archive")
    cursor.execute("""
        CREATE TABLE master_reports_archive (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            master_id INTEGER NOT NULL,
            period_start DATETIME NOT NULL,
            period_end DATETIME NOT NULL,
            file_path VARCHAR(500) NOT NULL,
            file_name VARCHAR(255) NOT NULL,
            file_size INTEGER,
            total_orders INTEGER DEFAULT 0,
            active_orders INTEGER DEFAULT 0,
            completed_orders INTEGER DEFAULT 0,
            total_revenue REAL DEFAULT 0.0,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            notes TEXT,
            FOREIGN KEY (master_id) REFERENCES masters (id) ON DELETE CASCADE
        )
    """)

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    cursor.execute(
        "CREATE INDEX idx_master_reports_master_id ON master_reports_archive (master_id);"
    )
    cursor.execute(
        "CREATE INDEX idx_master_reports_period ON master_reports_archive (period_start, period_end);"
    )
    cursor.execute(
        "CREATE INDEX idx_master_reports_created ON master_reports_archive (created_at);"
    )

    conn.commit()
    print("  ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 010 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
    return True


def update_alembic_version(cursor, conn, version: str):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ alembic_version"""
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑-–∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤)
    cursor.execute("DELETE FROM alembic_version;")
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
    cursor.execute("INSERT INTO alembic_version (version_num) VALUES (?);", (version,))
    conn.commit()
    print(f"  üìå –í–µ—Ä—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {version}")


def show_statistics(cursor):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞–±–ª–∏—Ü"""
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:")
    cursor.execute(
        "SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%';"
    )
    tables = cursor.fetchall()
    for table in tables:
        cursor.execute(f"SELECT COUNT(*) FROM {table[0]};")
        count = cursor.fetchone()[0]
        print(f"  - {table[0]}: {count} –∑–∞–ø–∏—Å–µ–π")


def main():
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ë–î
    if len(sys.argv) > 1:
        db_path = sys.argv[1]
    else:
        db_path = '/app/data/bot_database.db'

    print("=" * 60)
    print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SQLite-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π")
    print("=" * 60)
    print(f"üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_path}")

    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
        current_version = get_current_version(cursor)
        print(f"üìå –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {current_version}")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å
        version_order = ['005_add_reschedule_fields', '006_add_performance_indexes', '008_add_soft_delete', '010_create_master_reports_archive']

        if current_version in version_order:
            current_idx = version_order.index(current_version)
            migrations_to_apply = version_order[current_idx + 1:]
        else:
            print(f"‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è: {current_version}")
            print("‚ÑπÔ∏è  –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
            migrations_to_apply = version_order

        if not migrations_to_apply:
            print("\n‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
            show_statistics(cursor)
            return 0

        print(f"\nüéØ –ú–∏–≥—Ä–∞—Ü–∏–∏ –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é: {', '.join(migrations_to_apply)}")

        changes_made = False

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
        if '006_add_performance_indexes' in migrations_to_apply:
            print("\nüìã –ú–∏–≥—Ä–∞—Ü–∏—è 006: Performance indexes")
            print("  ‚ÑπÔ∏è  –ò–Ω–¥–µ–∫—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ alembic –∏–ª–∏ –≤—Ä—É—á–Ω—É—é")
            print("  ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º (–±–µ–∑–æ–ø–∞—Å–Ω–æ)")

        if '008_add_soft_delete' in migrations_to_apply:
            if apply_migration_008(cursor, conn):
                changes_made = True

        if '010_create_master_reports_archive' in migrations_to_apply:
            if apply_migration_010(cursor, conn):
                changes_made = True

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
        if changes_made or current_version != '010_create_master_reports_archive':
            print("\nüìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏")
            update_alembic_version(cursor, conn, '010_create_master_reports_archive')

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        show_statistics(cursor)

        print("\n" + "=" * 60)
        print("‚úÖ –ú–ò–ì–†–ê–¶–ò–ò –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û")
        print("=" * 60)

        return 0

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        if 'conn' in locals():
            conn.rollback()
        return 1
    finally:
        if 'conn' in locals():
            conn.close()
            print("\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")


if __name__ == "__main__":
    sys.exit(main())
