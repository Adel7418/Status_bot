#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID
"""
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.database.db import Database
from app.config import UserRole


async def set_user_role(telegram_id: int, new_role: str):
    """
    –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Args:
        telegram_id: Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_role: –ù–æ–≤–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
    valid_roles = [UserRole.ADMIN, UserRole.DISPATCHER, UserRole.MASTER, UserRole.UNKNOWN]
    
    if new_role not in valid_roles:
        print(f"‚ùå –û—à–∏–±–∫–∞: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å '{new_role}'")
        print(f"–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–æ–ª–∏: {', '.join(valid_roles)}")
        return
    
    db = Database()
    await db.connect()

    try:
        user = await db.get_user_by_telegram_id(telegram_id)

        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print("\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return

        old_role = user.role
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å
        await db.connection.execute(
            "UPDATE users SET role = ? WHERE telegram_id = ?",
            (new_role, telegram_id)
        )
        await db.connection.commit()

        print(f"\n‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!\n")
        print(f"   Telegram ID: {telegram_id}")
        print(f"   –ò–º—è: {user.first_name} {user.last_name or ''}")
        if user.username:
            print(f"   Username: @{user.username}")
        print(f"   –°—Ç–∞—Ä–∞—è —Ä–æ–ª—å: {old_role}")
        print(f"   –ù–æ–≤–∞—è —Ä–æ–ª—å: {new_role}")
        print()
        
        if new_role == UserRole.DISPATCHER:
            print("üìä –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ç—á–µ—Ç–∞–º!")
        elif new_role == UserRole.ADMIN:
            print("üîë –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø–æ–ª–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø!")
        elif new_role == UserRole.MASTER:
            print("üîß –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –º–∞—Å—Ç–µ—Ä!")
        
        print("\n‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é.")
        print()

    finally:
        await db.disconnect()


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python set_user_role.py <telegram_id> <role>")
        print("\n–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–æ–ª–∏:")
        print(f"  - {UserRole.ADMIN} - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)")
        print(f"  - {UserRole.DISPATCHER} - –î–∏—Å–ø–µ—Ç—á–µ—Ä (—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫, –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤, –æ—Ç—á–µ—Ç—ã)")
        print(f"  - {UserRole.MASTER} - –ú–∞—Å—Ç–µ—Ä (—Ä–∞–±–æ—Ç–∞ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏)")
        print(f"  - {UserRole.UNKNOWN} - –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π (–±–µ–∑ –¥–æ—Å—Ç—É–ø–∞)")
        print("\n–ü—Ä–∏–º–µ—Ä: python set_user_role.py 123456789 dispatcher")
        sys.exit(1)

    try:
        telegram_id = int(sys.argv[1])
        new_role = sys.argv[2].lower()
        await set_user_role(telegram_id, new_role)
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: Telegram ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())

