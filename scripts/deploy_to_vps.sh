#!/bin/bash

# ========================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –±–æ—Ç–∞ –Ω–∞ VPS Linux
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_to_vps.sh <IP_–∞–¥—Ä–µ—Å> <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>
# ========================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    print_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <IP_–∞–¥—Ä–µ—Å> <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>"
    print_info "–ü—Ä–∏–º–µ—Ä: $0 192.168.1.100 root"
    exit 1
fi

VPS_IP=$1
VPS_USER=$2
VPS_PATH="/home/$VPS_USER/telegram_repair_bot"
LOCAL_PATH="$(pwd)"

print_info "=========================================="
print_info "üöÄ –î–µ–ø–ª–æ–π Telegram Repair Bot –Ω–∞ VPS"
print_info "=========================================="
echo ""
print_info "VPS: $VPS_USER@$VPS_IP"
print_info "–£–¥–∞–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å: $VPS_PATH"
print_info "–õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å: $LOCAL_PATH"
echo ""

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPS
print_info "–®–∞–≥ 1/7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPS..."
if ssh -o ConnectTimeout=5 "$VPS_USER@$VPS_IP" "echo 'Connected'" &>/dev/null; then
    print_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPS"
    print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: IP –∞–¥—Ä–µ—Å, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, SSH –∫–ª—é—á"
    exit 1
fi

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_info "–®–∞–≥ 2/7: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "bot_database.db" ]; then
    python backup_db.py 2>/dev/null || {
        TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
        mkdir -p backups
        cp bot_database.db "backups/bot_database_${TIMESTAMP}.db"
        print_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: backups/bot_database_${TIMESTAMP}.db"
    }
else
    print_warning "–õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–µ–ø–ª–æ—è)"
fi

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
print_info "–®–∞–≥ 3/7: –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞..."
if [ ! -f ".env" ]; then
    print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    print_info "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example"
    print_info "cp env.example .env"
    print_info "nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if ! grep -q "BOT_TOKEN=.*[^example]" .env; then
    print_error "BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!"
    print_info "–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env"
    exit 1
fi

if ! grep -q "ADMIN_IDS=.*[0-9]" .env; then
    print_warning "ADMIN_IDS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
    print_info "–£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π ID —É @userinfobot –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env"
fi

print_success ".env —Ñ–∞–π–ª –ø—Ä–æ–≤–µ—Ä–µ–Ω"

# –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ VPS
print_info "–®–∞–≥ 4/7: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ VPS..."
ssh "$VPS_USER@$VPS_IP" "mkdir -p $VPS_PATH/{data,logs,backups}" || {
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ VPS"
    exit 1
}
print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –®–∞–≥ 5: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_info "–®–∞–≥ 5/7: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."

# –ò—Å–ø–æ–ª—å–∑—É–µ–º rsync –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏
if command -v rsync &> /dev/null; then
    print_info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è rsync –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤..."
    rsync -avz --progress \
        --exclude '__pycache__' \
        --exclude '*.pyc' \
        --exclude '.git' \
        --exclude '.vscode' \
        --exclude 'venv' \
        --exclude '.env' \
        --exclude '*.log' \
        --exclude 'htmlcov' \
        --exclude '.pytest_cache' \
        -e "ssh" \
        "$LOCAL_PATH/" \
        "$VPS_USER@$VPS_IP:$VPS_PATH/" || {
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤"
        exit 1
    }
else
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º scp –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É
    print_info "rsync –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è scp..."
    scp -r \
        "$LOCAL_PATH/app" \
        "$LOCAL_PATH/docker" \
        "$LOCAL_PATH/migrations" \
        "$LOCAL_PATH/bot.py" \
        "$LOCAL_PATH/requirements.txt" \
        "$LOCAL_PATH/env.example" \
        "$VPS_USER@$VPS_IP:$VPS_PATH/" || {
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤"
        exit 1
    }
fi
print_success "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"

# –®–∞–≥ 6: –ü–µ—Ä–µ–¥–∞—á–∞ .env –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_info "–®–∞–≥ 6/7: –ü–µ—Ä–µ–¥–∞—á–∞ .env –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –ü–µ—Ä–µ–¥–∞—á–∞ .env
scp ".env" "$VPS_USER@$VPS_IP:$VPS_PATH/.env" || {
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å .env —Ñ–∞–π–ª"
    exit 1
}
print_success ".env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥–∞–Ω"

# –ü–µ—Ä–µ–¥–∞—á–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "bot_database.db" ]; then
    scp "bot_database.db" "$VPS_USER@$VPS_IP:$VPS_PATH/data/bot_database.db" || {
        print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º)"
    }
    print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞–Ω–∞"
else
    print_warning "–õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è)"
fi

# –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
print_info "–®–∞–≥ 7/7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
ssh "$VPS_USER@$VPS_IP" << 'EOF'
cd ~/telegram_repair_bot
chmod 600 .env
chmod 755 data logs backups
if [ -f "data/bot_database.db" ]; then
    chmod 644 data/bot_database.db
fi
EOF
print_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
echo ""
print_success "=========================================="
print_success "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
print_success "=========================================="
echo ""
print_info "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –Ω–∞ VPS —Å–µ—Ä–≤–µ—Ä–µ:"
echo ""
echo "1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPS:"
echo "   ssh $VPS_USER@$VPS_IP"
echo ""
echo "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞:"
echo "   cd $VPS_PATH"
echo ""
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Docker:"
echo "   docker compose -f docker/docker-compose.prod.yml up -d"
echo ""
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
echo "   docker compose -f docker/docker-compose.prod.yml logs -f bot"
echo ""
echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
echo "   docker compose -f docker/docker-compose.prod.yml ps"
echo ""
print_info "üìñ –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: DEPLOY_VPS_LINUX_GUIDE.md"
echo ""

