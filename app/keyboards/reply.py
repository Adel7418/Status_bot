"""
Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
"""
from typing import Union, List
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, KeyboardButtonRequestChat
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from app.config import UserRole


def get_main_menu_keyboard(role: Union[str, List[str]]) -> ReplyKeyboardMarkup:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    
    Args:
        role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π)
        
    Returns:
        ReplyKeyboardMarkup
    """
    builder = ReplyKeyboardBuilder()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
    if isinstance(role, str):
        roles = [role]
    else:
        roles = role
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å
    has_admin = UserRole.ADMIN in roles
    has_dispatcher = UserRole.DISPATCHER in roles
    has_master = UserRole.MASTER in roles
    
    if has_admin:
        # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∏–¥–∏—Ç –≤—Å–µ
        builder.row(
            KeyboardButton(text="üìã –í—Å–µ –∑–∞—è–≤–∫–∏"),
            KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
        )
        builder.row(
            KeyboardButton(text="üë• –ú–∞—Å—Ç–µ—Ä–∞"),
            KeyboardButton(text="üìä –û—Ç—á–µ—Ç—ã")
        )
        builder.row(
            KeyboardButton(text="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"),
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        )
    
    elif has_dispatcher or has_master:
        # –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏/–∏–ª–∏ –º–∞—Å—Ç–µ—Ä–∞
        buttons_added = set()
        
        # –ö–Ω–æ–ø–∫–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        if has_dispatcher:
            builder.row(
                KeyboardButton(text="üìã –í—Å–µ –∑–∞—è–≤–∫–∏"),
                KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
            )
            buttons_added.add("dispatcher_orders")
            
        # –ö–Ω–æ–ø–∫–∏ –º–∞—Å—Ç–µ—Ä–∞
        if has_master:
            builder.row(
                KeyboardButton(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏"),
                KeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            )
            buttons_added.add("master_orders")
        
        # –û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏
        if has_dispatcher:
            builder.row(
                KeyboardButton(text="üë• –ú–∞—Å—Ç–µ—Ä–∞"),
                KeyboardButton(text="üìä –û—Ç—á–µ—Ç—ã")
            )
        
        builder.row(
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        )
    
    else:  # UNKNOWN
        builder.row(
            KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"),
            KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è")
        )
    
    return builder.as_markup(resize_keyboard=True)


def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    
    Returns:
        ReplyKeyboardMarkup
    """
    builder = ReplyKeyboardBuilder()
    builder.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return builder.as_markup(resize_keyboard=True)


def get_skip_cancel_keyboard() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –æ—Ç–º–µ–Ω–∞
    
    Returns:
        ReplyKeyboardMarkup
    """
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")
    )
    return builder.as_markup(resize_keyboard=True)


def get_confirm_keyboard() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    
    Returns:
        ReplyKeyboardMarkup
    """
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
        KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")
    )
    return builder.as_markup(resize_keyboard=True)

