"""
–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import logging
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from app.config import UserRole, Messages
from app.keyboards.reply import get_main_menu_keyboard
from app.database.models import User
from app.decorators import handle_errors

logger = logging.getLogger(__name__)

router = Router(name='common')


@router.message(CommandStart())
@handle_errors
async def cmd_start(message: Message, user: User, user_role: str, user_roles: list):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ë–î
        user_role: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        user_roles: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    logger.info(f"START command received from user {message.from_user.id}")
    logger.info(f"User roles: {user_roles}, User object: {user}")
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–µ–π
    welcome_messages = {
        UserRole.ADMIN: Messages.WELCOME_ADMIN,
        UserRole.DISPATCHER: Messages.WELCOME_DISPATCHER,
        UserRole.MASTER: Messages.WELCOME_MASTER,
        UserRole.UNKNOWN: Messages.WELCOME_UNKNOWN
    }
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if UserRole.ADMIN in user_roles:
        welcome_text = welcome_messages[UserRole.ADMIN]
    elif UserRole.DISPATCHER in user_roles and UserRole.MASTER in user_roles:
        welcome_text = (
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–∞–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, —Ç–∞–∫ –∏ –º–∞—Å—Ç–µ—Ä–∞.\n"
            "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, –Ω–∞–∑–Ω–∞—á–∞—Ç—å –∏—Ö –º–∞—Å—Ç–µ—Ä–∞–º –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏—Ö —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
        )
    elif UserRole.DISPATCHER in user_roles:
        welcome_text = welcome_messages[UserRole.DISPATCHER]
    elif UserRole.MASTER in user_roles:
        welcome_text = welcome_messages[UserRole.MASTER]
    else:
        welcome_text = welcome_messages.get(UserRole.UNKNOWN, Messages.WELCOME_UNKNOWN)
    
    logger.info(f"Sending welcome message...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–ø–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π)
    await message.answer(
        welcome_text,
        reply_markup=get_main_menu_keyboard(user_roles)
    )
    
    logger.info(f"User {message.from_user.id} ({', '.join(user_roles)}) started the bot")


@router.message(Command("help"))
@handle_errors
async def cmd_help(message: Message, user_role: str, user_roles: list):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        user_role: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_roles: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    help_texts = {
        UserRole.ADMIN: (
            "üìö <b>–ü–æ–º–æ—â—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üìã –í—Å–µ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ\n"
            "‚Ä¢ ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏\n"
            "‚Ä¢ üë• –ú–∞—Å—Ç–µ—Ä–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞–º–∏\n"
            "‚Ä¢ üìä –û—Ç—á–µ—Ç—ã - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤\n"
            "‚Ä¢ üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
            "‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/cancel - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        ),
        UserRole.DISPATCHER: (
            "üìö <b>–ü–æ–º–æ—â—å –¥–ª—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üìã –í—Å–µ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫\n"
            "‚Ä¢ ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏\n"
            "‚Ä¢ üë• –ú–∞—Å—Ç–µ—Ä–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤\n"
            "‚Ä¢ üìä –û—Ç—á–µ—Ç—ã - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/cancel - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        ),
        UserRole.MASTER: (
            "üìö <b>–ü–æ–º–æ—â—å –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≤–∞–º –∑–∞—è–≤–æ–∫\n"
            "‚Ä¢ üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã\n\n"
            "–°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫:\n"
            "‚Ä¢ üÜï –ù–æ–≤–∞—è - –∑–∞—è–≤–∫–∞ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–∞\n"
            "‚Ä¢ üë®‚Äçüîß –ù–∞–∑–Ω–∞—á–µ–Ω–∞ - –∑–∞—è–≤–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –≤–∞–º\n"
            "‚Ä¢ ‚úÖ –ü—Ä–∏–Ω—è—Ç–∞ - –≤—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞—è–≤–∫—É\n"
            "‚Ä¢ üè† –ù–∞ –æ–±—ä–µ–∫—Ç–µ - –≤—ã –Ω–∞ –æ–±—ä–µ–∫—Ç–µ\n"
            "‚Ä¢ üí∞ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ - —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n"
            "‚Ä¢ ‚è≥ –î–ª–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç - —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/cancel - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        ),
        UserRole.UNKNOWN: (
            "üìö <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</b>\n\n"
            "–≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏.\n\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        )
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø—Ä–∞–≤–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä–æ–ª—è–º–∏
    if UserRole.ADMIN in user_roles:
        help_text = help_texts[UserRole.ADMIN]
    elif UserRole.DISPATCHER in user_roles and UserRole.MASTER in user_roles:
        help_text = (
            "üìö <b>–ü–æ–º–æ—â—å (–î–∏—Å–ø–µ—Ç—á–µ—Ä + –ú–∞—Å—Ç–µ—Ä)</b>\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "‚Ä¢ üìã –í—Å–µ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫\n"
            "‚Ä¢ ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏\n"
            "‚Ä¢ üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –≤–∞–º –∑–∞—è–≤–æ–∫\n"
            "‚Ä¢ üë• –ú–∞—Å—Ç–µ—Ä–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤\n"
            "‚Ä¢ üìä –û—Ç—á–µ—Ç—ã - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤\n"
            "‚Ä¢ üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/cancel - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
        )
    else:
        help_text = help_texts.get(user_role, help_texts[UserRole.UNKNOWN])
    
    await message.answer(help_text, parse_mode="HTML")
    
    logger.info(f"User {message.from_user.id} requested help")


@router.message(Command("cancel"))
@handle_errors
async def cmd_cancel(message: Message, state: FSMContext, user_role: str, user_roles: list):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        state: FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_role: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_roles: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    await message.answer(
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_main_menu_keyboard(user_roles)
    )
    
    logger.info(f"User {message.from_user.id} cancelled action")


@router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
@handle_errors
async def btn_cancel(message: Message, state: FSMContext, user_role: str, user_roles: list):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        state: FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
        user_role: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_roles: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    await cmd_cancel(message, state, user_role, user_roles)


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
@handle_errors
async def btn_settings(message: Message, user: User):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
    roles = user.get_roles()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–æ–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    role_names = {
        UserRole.ADMIN: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        UserRole.DISPATCHER: "–î–∏—Å–ø–µ—Ç—á–µ—Ä",
        UserRole.MASTER: "–ú–∞—Å—Ç–µ—Ä",
        UserRole.UNKNOWN: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    }
    
    roles_display = ", ".join([role_names.get(r, r) for r in roles])
    
    settings_text = (
        f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</b>\n\n"
        f"üë§ <b>–ò–º—è:</b> {user.get_full_name()}\n"
        f"üÜî <b>Telegram ID:</b> <code>{user.telegram_id}</code>\n"
        f"üëî <b>–†–æ–ª–∏:</b> {roles_display}\n"
    )
    
    if user.username:
        settings_text += f"üì± <b>Username:</b> @{user.username}\n"
    
    await message.answer(settings_text, parse_mode="HTML")


@router.message(F.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def btn_info(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
    """
    info_text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</b>\n\n"
        "–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏.\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏\n"
        "‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤\n"
        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã."
    )
    
    await message.answer(info_text, parse_mode="HTML")


@router.message(F.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è")
async def btn_contact(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–≤—è–∑–∏
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
    """
    contact_text = (
        "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –∏–ª–∏ –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º "
        "–æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
        "–í–∞—à Telegram ID –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n"
        f"<code>{message.from_user.id}</code>\n\n"
        "<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ ID —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</i>"
    )
    
    await message.answer(contact_text, parse_mode="HTML")


@router.callback_query(F.data == "cancel")
async def callback_cancel(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
    
    Args:
        callback: Callback query
        state: FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
    """
    await state.clear()
    await callback.message.delete()
    await callback.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")


@router.callback_query(F.data == "no_orders")
async def callback_no_orders(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
    
    Args:
        callback: Callback query
    """
    await callback.answer("–ó–∞—è–≤–æ–∫ –Ω–µ—Ç", show_alert=True)


@router.callback_query(F.data == "current_page")
async def callback_current_page(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    
    Args:
        callback: Callback query
    """
    await callback.answer()


@router.message(F.text)
async def handle_unknown_text(message: Message, user_role: str):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        user_role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö - –±–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
    if message.chat.type in ['group', 'supergroup']:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
    # –ò—Å–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Ä–æ—É—Ç–µ—Ä–∞–º–∏
    known_buttons = [
        "‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É",
        "üìã –í—Å–µ –∑–∞—è–≤–∫–∏", 
        "üë• –ú–∞—Å—Ç–µ—Ä–∞",
        "üìä –û—Ç—á–µ—Ç—ã",
        "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏",
        "üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è",
        "‚ùå –û—Ç–º–µ–Ω–∞",
        "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
        "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    ]
    
    # –ï—Å–ª–∏ —ç—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–¥–µ—Å—å
    if message.text in known_buttons:
        return
    
    if user_role == UserRole.UNKNOWN:
        await message.answer(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ.\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.",
            reply_markup=get_main_menu_keyboard(user_role)
        )
    else:
        await message.answer(
            "‚ùì –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.",
            reply_markup=get_main_menu_keyboard(user_role)
        )

