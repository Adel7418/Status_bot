#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ deleted_at –∏ version –≤ —Ç–∞–±–ª–∏—Ü—ã orders –∏ masters
"""

import os
import sqlite3
import sys


def update_production_database():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""

    # –ü—É—Ç—å –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "/app/data/bot_database.db"

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()

        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_path}")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = [row[0] for row in cursor.fetchall()]
        print(f"üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {tables}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É orders
        if "orders" in tables:
            print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É orders...")
            cursor.execute("PRAGMA table_info(orders)")
            columns = [row[1] for row in cursor.fetchall()]
            print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ orders: {columns}")

            if "deleted_at" not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É deleted_at –≤ orders...")
                cursor.execute("ALTER TABLE orders ADD COLUMN deleted_at TIMESTAMP")
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ deleted_at –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ orders")
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ deleted_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ orders")

            if "version" not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É version –≤ orders...")
                cursor.execute("ALTER TABLE orders ADD COLUMN version INTEGER DEFAULT 1")
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ version –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ orders")
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ version —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ orders")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
            cursor.execute("UPDATE orders SET version = 1 WHERE version IS NULL")
            print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ orders")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É masters
        if "masters" in tables:
            print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É masters...")
            cursor.execute("PRAGMA table_info(masters)")
            columns = [row[1] for row in cursor.fetchall()]
            print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ masters: {columns}")

            if "deleted_at" not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É deleted_at –≤ masters...")
                cursor.execute("ALTER TABLE masters ADD COLUMN deleted_at TIMESTAMP")
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ deleted_at –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ masters")
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ deleted_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ masters")

            if "version" not in columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É version –≤ masters...")
                cursor.execute("ALTER TABLE masters ADD COLUMN version INTEGER DEFAULT 1")
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ version –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ masters")
            else:
                print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ version —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ masters")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
            cursor.execute("UPDATE masters SET version = 1 WHERE version IS NULL")
            print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ masters")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("\n‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        for table in ["orders", "masters"]:
            if table in tables:
                cursor.execute(f"PRAGMA table_info({table})")
                columns = [row[1] for row in cursor.fetchall()]
                print(f"  {table}: {columns}")

        conn.close()
        print("\nüéâ –ü—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback

        traceback.print_exc()
        return False


if __name__ == "__main__":
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    success = update_production_database()

    if success:
        print("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üí• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1)
