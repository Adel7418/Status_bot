# Pre-commit hooks configuration
# Установка: pip install pre-commit && pre-commit install

repos:
  # Базовые проверки
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
      - id: end-of-file-fixer
        name: Fix End of Files
      - id: check-yaml
        name: Check YAML
        args: ['--unsafe']
      - id: check-toml
        name: Check TOML
      - id: check-json
        name: Check JSON
      - id: check-added-large-files
        name: Check for Large Files
        args: ['--maxkb=1000']
      - id: check-case-conflict
        name: Check Case Conflict
      - id: check-merge-conflict
        name: Check Merge Conflicts
      - id: check-docstring-first
        name: Check Docstring First
      - id: debug-statements
        name: Debug Statements (Python)
      - id: detect-private-key
        name: Detect Private Keys
      - id: mixed-line-ending
        name: Mixed Line Ending
        args: ['--fix=lf']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ["--profile", "black", "--line-length=100"]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.11
        args: ["--line-length=100"]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.3
    hooks:
      - id: ruff
        name: Lint with Ruff
        args: ["--fix", "--exit-non-zero-on-fix"]
      - id: ruff-format
        name: Format with Ruff

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        name: Type check with MyPy
        additional_dependencies:
          - types-python-dateutil
        args: ["--ignore-missing-imports", "--check-untyped-defs"]
        exclude: ^(tests/|migrations/)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        name: Security check with Bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # Проверка requirements.txt
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: remove-tabs
        name: Remove Tabs
        exclude: ^Makefile$

  # Проверка комментариев TODO, FIXME, etc.
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
        name: Check blanket noqa
      - id: python-check-blanket-type-ignore
        name: Check blanket type ignore
      - id: python-no-eval
        name: Check for eval()
      - id: python-no-log-warn
        name: Check for log.warn()
      - id: python-use-type-annotations
        name: Use type annotations
      - id: text-unicode-replacement-char
        name: Check unicode replacement char

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfile

  # YAML formatting
  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
    rev: v2.14.0
    hooks:
      - id: pretty-format-yaml
        name: Format YAML
        args: [--autofix, --indent, '2']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        name: Lint Markdown

# Конфигурация для specific hooks
default_language_version:
  python: python3.11

# Файлы для исключения
exclude: |
  (?x)^(
      \.git/|
      \.mypy_cache/|
      \.pytest_cache/|
      \.ruff_cache/|
      __pycache__/|
      \.venv/|
      venv/|
      build/|
      dist/|
      .*\.egg-info/|
      migrations/
  )$

# Fail fast
fail_fast: false

# Минимальная версия pre-commit
minimum_pre_commit_version: '3.0.0'

