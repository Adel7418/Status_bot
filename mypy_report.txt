=== MyPy Type Checking Report ===

app\utils\encryption.py: note: In member "__init__" of class "DataEncryptor":
app\utils\encryption.py:27:19: error: Incompatible types in assignment
(expression has type "bytes", variable has type "str | None")  [assignment]
                key = generated_key
                      ^~~~~~~~~~~~~
app\utils\encryption.py:31:19: error: Incompatible types in assignment
(expression has type "bytes", variable has type "str | None")  [assignment]
                key = key.encode()
                      ^~~~~~~~~~~~
app\utils\encryption.py: note: In member "decrypt" of class "DataEncryptor":
app\utils\encryption.py:76:13: error: Returning Any from function declared to
return "str | None"  [no-any-return]
                return decrypted.decode()
                ^~~~~~~~~~~~~~~~~~~~~~~~~
app\repositories\base.py: note: In member "_fetch_all" of class "BaseRepository":
app\repositories\base.py:98:16: error: Incompatible return value type (got
"Iterable[Row]", expected "list[Row]")  [return-value]
            return await cursor.fetchall()
                   ^~~~~~~~~~~~~~~~~~~~~~~
app\repositories\user_repository.py: note: In member "update" of class "UserRepository":
app\repositories\user_repository.py:237:43: error: Argument 2 to
"_execute_commit" of "BaseRepository" has incompatible type "list[Any]";
expected "tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            await self._execute_commit(query, params)
                                              ^~~~~~
app\repositories\order_repository.py: note: In member "get_all" of class "OrderRepository":
app\repositories\order_repository.py:149:27: error: Argument 1 to "append" of
"list" has incompatible type "int"; expected "str"  [arg-type]
                params.append(master_id)
                              ^~~~~~~~~
app\repositories\order_repository.py:155:27: error: Argument 1 to "append" of
"list" has incompatible type "int"; expected "str"  [arg-type]
                params.append(limit)
                              ^~~~~
app\repositories\order_repository.py:157:45: error: Argument 2 to "_fetch_all"
of "BaseRepository" has incompatible type "list[str]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\repositories\order_repository.py: note: In member "update" of class "OrderRepository":
app\repositories\order_repository.py:272:43: error: Argument 2 to
"_execute_commit" of "BaseRepository" has incompatible type "list[Any]";
expected "tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            await self._execute_commit(query, params)
                                              ^~~~~~
app\repositories\order_repository.py: note: In member "get_by_master" of class "OrderRepository":
app\repositories\order_repository.py:301:27: error: Argument 1 to "append" of
"list" has incompatible type "str"; expected "int"  [arg-type]
                params.append(status)
                              ^~~~~~
app\repositories\order_repository.py:305:45: error: Argument 2 to "_fetch_all"
of "BaseRepository" has incompatible type "list[int]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\repositories\order_repository.py: note: In member "get_by_period" of class "OrderRepository":
app\repositories\order_repository.py:340:45: error: Argument 2 to "_fetch_all"
of "BaseRepository" has incompatible type "list[str]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\repositories\order_repository.py: note: In member "_row_to_order" of class "OrderRepository":
app\repositories\order_repository.py:444:31: error: "Row" has no attribute
"get"  [attr-defined]
                rescheduled_count=row.get("rescheduled_count", 0),
                                  ^~~~~~~
app\repositories\order_repository.py:447:20: error: "Row" has no attribute
"get"  [attr-defined]
                    if row.get("last_rescheduled_at")
                       ^~~~~~~
app\repositories\order_repository.py:450:31: error: "Row" has no attribute
"get"  [attr-defined]
                reschedule_reason=row.get("reschedule_reason"),
                                  ^~~~~~~
app\repositories\order_repository.py:461:29: error: "Row" has no attribute
"get"  [attr-defined]
                dispatcher_name=row.get("dispatcher_name"),
                                ^~~~~~~
app\repositories\order_repository.py:462:25: error: "Row" has no attribute
"get"  [attr-defined]
                master_name=row.get("master_name"),
                            ^~~~~~~
app\repositories\master_repository.py: note: In member "get_all" of class "MasterRepository":
app\repositories\master_repository.py:168:45: error: Argument 2 to "_fetch_all"
of "BaseRepository" has incompatible type "list[int]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\repositories\master_repository.py: note: In member "update" of class "MasterRepository":
app\repositories\master_repository.py:192:43: error: Argument 2 to
"_execute_commit" of "BaseRepository" has incompatible type "list[Any]";
expected "tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            await self._execute_commit(query, params)
                                              ^~~~~~
app\repositories\master_repository.py: note: In member "update_by_telegram_id" of class "MasterRepository":
app\repositories\master_repository.py:217:43: error: Argument 2 to
"_execute_commit" of "BaseRepository" has incompatible type "list[Any]";
expected "tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            await self._execute_commit(query, params)
                                              ^~~~~~
app\repositories\master_repository.py: note: In member "_row_to_master" of class "MasterRepository":
app\repositories\master_repository.py:297:49: error: "Row" has no attribute
"get"  [attr-defined]
                work_chat_id=row["work_chat_id"] if row.get("work_chat_id"...
                                                    ^~~~~~~
app\repositories\master_repository.py:303:22: error: "Row" has no attribute
"get"  [attr-defined]
                username=row.get("username"),
                         ^~~~~~~
app\repositories\master_repository.py:304:24: error: "Row" has no attribute
"get"  [attr-defined]
                first_name=row.get("first_name"),
                           ^~~~~~~
app\repositories\master_repository.py:305:23: error: "Row" has no attribute
"get"  [attr-defined]
                last_name=row.get("last_name"),
                          ^~~~~~~
app\database\orm_models.py:19:12: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class User(Base):
               ^
app\database\orm_models.py:19:12: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "User":
app\database\orm_models.py:19:12: error: Invalid base class "Base"  [misc]
    class User(Base):
               ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:19:12: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class User(Base):
               ^
app\database\orm_models.py:19:12: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "User":
app\database\orm_models.py:19:12: error: Invalid base class "Base"  [misc]
    class User(Base):
               ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:108:14: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class Master(Base):
                 ^
app\database\orm_models.py:108:14: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "Master":
app\database\orm_models.py:108:14: error: Invalid base class "Base"  [misc]
    class Master(Base):
                 ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:108:14: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class Master(Base):
                 ^
app\database\orm_models.py:108:14: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "Master":
app\database\orm_models.py:108:14: error: Invalid base class "Base"  [misc]
    class Master(Base):
                 ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:152:13: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class Order(Base):
                ^
app\database\orm_models.py:152:13: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "Order":
app\database\orm_models.py:152:13: error: Invalid base class "Base"  [misc]
    class Order(Base):
                ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:152:13: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class Order(Base):
                ^
app\database\orm_models.py:152:13: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "Order":
app\database\orm_models.py:152:13: error: Invalid base class "Base"  [misc]
    class Order(Base):
                ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:224:26: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class OrderStatusHistory(Base):
                             ^
app\database\orm_models.py:224:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "OrderStatusHistory":
app\database\orm_models.py:224:26: error: Invalid base class "Base"  [misc]
    class OrderStatusHistory(Base):
                             ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:224:26: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class OrderStatusHistory(Base):
                             ^
app\database\orm_models.py:224:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "OrderStatusHistory":
app\database\orm_models.py:224:26: error: Invalid base class "Base"  [misc]
    class OrderStatusHistory(Base):
                             ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:249:16: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class AuditLog(Base):
                   ^
app\database\orm_models.py:249:16: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "AuditLog":
app\database\orm_models.py:249:16: error: Invalid base class "Base"  [misc]
    class AuditLog(Base):
                   ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:249:16: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class AuditLog(Base):
                   ^
app\database\orm_models.py:249:16: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "AuditLog":
app\database\orm_models.py:249:16: error: Invalid base class "Base"  [misc]
    class AuditLog(Base):
                   ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:272:23: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class FinancialReport(Base):
                          ^
app\database\orm_models.py:272:23: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "FinancialReport":
app\database\orm_models.py:272:23: error: Invalid base class "Base"  [misc]
    class FinancialReport(Base):
                          ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:272:23: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class FinancialReport(Base):
                          ^
app\database\orm_models.py:272:23: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "FinancialReport":
app\database\orm_models.py:272:23: error: Invalid base class "Base"  [misc]
    class FinancialReport(Base):
                          ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:294:29: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class MasterFinancialReport(Base):
                                ^
app\database\orm_models.py:294:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "MasterFinancialReport":
app\database\orm_models.py:294:29: error: Invalid base class "Base"  [misc]
    class MasterFinancialReport(Base):
                                ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:294:29: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class MasterFinancialReport(Base):
                                ^
app\database\orm_models.py:294:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "MasterFinancialReport":
app\database\orm_models.py:294:29: error: Invalid base class "Base"  [misc]
    class MasterFinancialReport(Base):
                                ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:318:21: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class EntityHistory(Base):
                        ^
app\database\orm_models.py:318:21: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "EntityHistory":
app\database\orm_models.py:318:21: error: Invalid base class "Base"  [misc]
    class EntityHistory(Base):
                        ^
app\database\orm_models.py: note: At top level:
app\database\orm_models.py:318:21: error: Variable
"app.database.orm_models.Base" is not valid as a type  [valid-type]
    class EntityHistory(Base):
                        ^
app\database\orm_models.py:318:21: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
app\database\orm_models.py: note: In class "EntityHistory":
app\database\orm_models.py:318:21: error: Invalid base class "Base"  [misc]
    class EntityHistory(Base):
                        ^
app\utils\retry.py: note: In function "retry_on_telegram_error":
app\utils\retry.py:80:21: error: Returning Any from function declared to return
"T | None"  [no-any-return]
                        return await func(*args, **kwargs)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\utils\retry.py:80:28: error: Incompatible types in "await" (actual type
"T", expected type "Awaitable[Any]")  [misc]
                        return await func(*args, **kwargs)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
app\utils\retry.py:175:16: error: Incompatible return value type (got
"_Wrapped[[VarArg(Any), KwArg(Any)], T, [VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T | None]]",
expected "Callable[..., T]")  [return-value]
            return wrapper
                   ^~~~~~~
app\utils\retry.py:175:16: note: "_Wrapped[[VarArg(Any), KwArg(Any)], T, [VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T | None]].__call__" has type "Callable[[VarArg(Any), KwArg(Any)], Coroutine[Any, Any, T | None]]"
app\repositories\order_repository_extended.py: note: In member "get_all" of class "OrderRepositoryExtended":
app\repositories\order_repository_extended.py:188:27: error: Argument 1 to
"append" of "list" has incompatible type "int"; expected "str"  [arg-type]
                params.append(master_id)
                              ^~~~~~~~~
app\repositories\order_repository_extended.py:194:27: error: Argument 1 to
"append" of "list" has incompatible type "int"; expected "str"  [arg-type]
                params.append(limit)
                              ^~~~~
app\repositories\order_repository_extended.py:196:45: error: Argument 2 to
"_fetch_all" of "BaseRepository" has incompatible type "list[str]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\repositories\order_repository_extended.py: note: In member "search_orders" of class "OrderRepositoryExtended":
app\repositories\order_repository_extended.py:260:27: error: Argument 1 to
"append" of "list" has incompatible type "int"; expected "str"  [arg-type]
                params.append(master_id)
                              ^~~~~~~~~
app\repositories\order_repository_extended.py:279:23: error: Argument 1 to
"append" of "list" has incompatible type "int"; expected "str"  [arg-type]
            params.append(limit)
                          ^~~~~
app\repositories\order_repository_extended.py:281:45: error: Argument 2 to
"_fetch_all" of "BaseRepository" has incompatible type "list[str]"; expected
"tuple[Any, ...] | dict[Any, Any] | None"  [arg-type]
            rows = await self._fetch_all(query, params)
                                                ^~~~~~
app\middlewares\error_handler.py: note: In function "global_error_handler":
app\middlewares\error_handler.py:22:36: error: Item "None" of "User | None" has
no attribute "id"  [union-attr]
            error_details["user_id"] = event.update.message.from_user.id
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\middlewares\error_handler.py:23:37: error: Item "None" of "User | None" has
no attribute "username"  [union-attr]
            error_details["username"] = event.update.message.from_user.use...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
app\middlewares\error_handler.py:23:37: error: Incompatible types in assignment
(expression has type "str | Any | None", target has type "int | str")
[assignment]
            error_details["username"] = event.update.message.from_user.use...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
app\middlewares\error_handler.py:24:41: error: Incompatible types in assignment
(expression has type "str | None", target has type "int | str")  [assignment]
            error_details["message_text"] = event.update.message.text
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~
app\middlewares\error_handler.py:28:37: error: Incompatible types in assignment
(expression has type "str | None", target has type "int | str")  [assignment]
            error_details["username"] = event.update.callback_query.from_u...
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
app\middlewares\error_handler.py:29:42: error: Incompatible types in assignment
(expression has type "str | None", target has type "int | str")  [assignment]
            error_details["callback_data"] = event.update.callback_query.d...
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "__init__" of class "ORMDatabase":
app\database\orm_database.py:32:44: error: Incompatible default for argument
"database_url" (default has type "None", argument has type "str")  [assignment]
        def __init__(self, database_url: str = None):
                                               ^~~~
app\database\orm_database.py:32:44: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
app\database\orm_database.py:32:44: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
app\database\orm_database.py: note: In member "get_or_create_user" of class "ORMDatabase":
app\database\orm_database.py:151:17: error: Returning Any from function
declared to return "User"  [no-any-return]
                    return user
                    ^~~~~~~~~~~
app\database\orm_database.py:174:13: error: Returning Any from function
declared to return "User"  [no-any-return]
                return user
                ^~~~~~~~~~~
app\database\orm_database.py: note: In member "get_user_by_telegram_id" of class "ORMDatabase":
app\database\orm_database.py:186:13: error: Returning Any from function
declared to return "User | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_master_by_telegram_id" of class "ORMDatabase":
app\database\orm_database.py:353:13: error: Returning Any from function
declared to return "Master | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_master_by_id" of class "ORMDatabase":
app\database\orm_database.py:384:13: error: Returning Any from function
declared to return "Master | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_master_by_work_chat_id" of class "ORMDatabase":
app\database\orm_database.py:395:13: error: Returning Any from function
declared to return "Master | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_order_by_id" of class "ORMDatabase":
app\database\orm_database.py:504:13: error: Returning Any from function
declared to return "Order | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_statistics" of class "ORMDatabase":
app\database\orm_database.py:844:17: error: Incompatible types in assignment
(expression has type "Select[tuple[int]]", variable has type
"Select[tuple[str, int]]")  [assignment]
                    select(func.count(Master.id).label('count'))
                    ^
app\database\orm_database.py:857:17: error: Incompatible types in assignment
(expression has type "Select[tuple[int]]", variable has type
"Select[tuple[str, int]]")  [assignment]
                    select(func.count(Order.id).label('count'))
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\database\orm_database.py: note: In member "get_financial_report_by_id" of class "ORMDatabase":
app\database\orm_database.py:899:13: error: Returning Any from function
declared to return "FinancialReport | None"  [no-any-return]
                return result.scalar_one_or_none()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app\services\search_service.py: note: In member "format_search_results" of class "SearchService":
app\services\search_service.py:202:16: error: "Order" has no attribute
"deleted_at"  [attr-defined]
                if order.deleted_at:
                   ^~~~~~~~~~~~~~~~
app\services\search_service.py:203:54: error: "Order" has no attribute
"deleted_at"  [attr-defined]

=== Errors ===
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Scripts\mypy.exe\__main__.py", line 7, in <module>
    sys.exit(console_entry())
             ~~~~~~~~~~~~~^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\site-packages\mypy\__main__.py", line 15, in console_entry
    main()
    ~~~~^^
  File "mypy\main.py", line 102, in main
  File "mypy\main.py", line 186, in run_build
  File "mypy\build.py", line 194, in build
  File "mypy\build.py", line 269, in _build
  File "mypy\build.py", line 2935, in dispatch
  File "mypy\build.py", line 3333, in process_graph
  File "mypy\build.py", line 3459, in process_stale_scc
  File "mypy\main.py", line 178, in flush_errors
  File "mypy\main.py", line 221, in show_messages
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python313\Lib\encodings\cp1251.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f5d1' in position 31: character maps to <undefined>
